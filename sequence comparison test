#include <hidef.h>      /* common defines and macros */
#include "derivative.h"      /* derivative-specific definitions */
#include <stdio.h>
#include <stdlib.h>
#include <time.h>


uint randArray[100];         /*maximum sequence*/

uint flashTime = 150;      /*the time between the LED flashes*/
uint i;
uint j;
                                 
uint n;                     /*size of sequence*/
uint gameArray[100];            /*an array of n-values of randArray*/
unsigned char period1 = 25;   /*The periods of the frequencies generated by each button*/
unsigned char period2 = 27;
unsigned char period3 = 30;
unsigned char period4 = 40;
unsigned char period5 = 50;
unsigned char period6 = 60;
unsigned char period7 = 70;
unsigned char period8 = 80;
unsigned int sequenceSpeed = 30000;
void wait(ulong iteration)

{                               /*wait function to create a timer*/  
	while( iteration > 0)
	{
		--iteration;
	}
}

void tone(uint period){
uint k;
  for(k=0; k<flashTime;k++){
    
    PORTE = 0b00000100;
    wait(period);
    PORTE = 0b00000000;
    wait(period);
  }
}
  

void main(void)
{
  
    
  DDRA = 0xFF;                    /*Set PORTA to output*/
  DDRB = 0x00;                    /*set PORTB to input*/
  DDRE = 0b11111100;              /*PORT E bits 0 and 1 kept as input becasue they cannot be changed, buts 2 - 7 changed to outputs*/
  
  
  
 for(i=0;i<100;i++)               /*creates a pseudo random array of size 100 where each bit is between 0 and 7*/
 {                                /*'real' random algorithms will be used eventually*/
  randArray[i]=(rand()%8);

 }
 for(n=0;n<=5;n++){
  
 for(j=0;j<=n;j++)                /*this for loop adds the first n values of randArray to gameArray*/        
 {
  gameArray[j]=randArray[j]; 
           
  switch(gameArray[j])            /*switch statement assigns an LED to the 0-7 values*/
  {
      case 0 :
         PORTA = 0x01;
         tone(period1);
         PORTA = 0x00;
         break;
      case 1 :
        PORTA = 0x02;
         tone(period2);
         PORTA = 0x00;
         
         break;
      case 2 :
         PORTA = 0x04;
         tone(period3);
         PORTA = 0x00;
         break;
      case 3 :
         PORTA = 0x08;
         tone(period4);
         PORTA = 0x00;
         break;
      case 4 :
         PORTA = 0x10;
         tone(period5);
         PORTA = 0x00;
         break;
      case 5 :
         PORTA = 0x20;
         tone(period6);
         PORTA = 0x00;
         break;
      case 6 :
        PORTA = 0x40;
         tone(period7);
         PORTA = 0x00;
         break;
      case 7 :
         PORTA = 0x80;
         tone(period8);
         PORTA = 0x00;
         break;   
      default:
      PORTA=0x00;
      break;
  }
  wait(sequenceSpeed);                          /*the time between the LED flashes*/
 }
  wait(2*sequenceSpeed);
 }


  for(;;) 
  {
    _FEED_COP(); /* feeds the dog */
  } /* loop forever */
  /* please make sure that you never leave main */
}
